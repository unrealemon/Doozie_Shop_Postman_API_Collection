{
	"info": {
		"_postman_id": "6223d654-d46f-4d18-bc94-bf61ffaf60b5",
		"name": "Doozie Shop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28300289"
	},
	"item": [
		{
			"name": "/v1/items/search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"// Test for status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"// Test for success property\r",
							"pm.test(\"Response has success property\", function () {\r",
							"    pm.expect(response).to.have.property('success');\r",
							"    pm.expect(response.success).to.be.a('boolean');\r",
							"});\r",
							"\r",
							"// Test for result property\r",
							"pm.test(\"Response has result property\", function () {\r",
							"    pm.expect(response).to.have.property('result');\r",
							"    pm.expect(response.result).to.be.an('array');\r",
							"    pm.expect(response.result.length).to.be.greaterThan(0); // Ensure there is at least one item\r",
							"});\r",
							"\r",
							"// Loop through each item in the result array\r",
							"response.result.forEach(item => {\r",
							"    pm.test(`Item ${item.item_id} has required properties`, function () {\r",
							"        pm.expect(item).to.have.property('item_id');\r",
							"        pm.expect(item.item_id).to.be.a('string');\r",
							"\r",
							"        pm.expect(item).to.have.property('title');\r",
							"        pm.expect(item.title).to.be.a('string');\r",
							"\r",
							"        pm.expect(item).to.have.property('price');\r",
							"        pm.expect(item.price).to.be.a('number');\r",
							"        pm.expect(item.price).to.be.greaterThan(0); // Ensure price is greater than 0\r",
							"\r",
							"        pm.expect(item).to.have.property('currency');\r",
							"        pm.expect(item.currency).to.be.a('string');\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test for Content-Type header\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"rakuten_query_parameters\": {\r\n    \"keyword\": \"belt\",\r\n    \"sort\": \"-itemPrice\"\r\n   \r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://demo-shop-api.gigalogy.com.bd/v1/items/search",
					"protocol": "https",
					"host": [
						"demo-shop-api",
						"gigalogy",
						"com",
						"bd"
					],
					"path": [
						"v1",
						"items",
						"search"
					]
				}
			},
			"response": []
		}
	]
}